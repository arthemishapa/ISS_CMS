@model CMS.CMS.Common.ViewModels.SubmissionViewModel

@{
    ViewBag.Title = Model.Action + " submission";
}

<h2>@ViewBag.Title</h2>

@using (@Html.BeginForm(Model.Action, "Submission", FormMethod.Post, new { @id = "form1", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.ConferenceId, new { Id = "ConferenceId" })
    @Html.HiddenFor(s => s.Id, new { Id = "Id" })

    <div class="form-group">
        @Html.LabelFor(m => m.Title)
        @if (Model.Action == "Edit")
        {
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", autofocus = "autofocus", @readonly = true });
        }
        else
        {
            @Html.TextBoxFor(m => m.Title, new { @class = "form-control", autofocus = "autofocus" });
        }
        @Html.ValidationMessageFor(m => m.Title, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(x => Model.Abstract, htmlAttributes: new { @class = "control-label" })
        @Html.TextAreaFor(m => m.Abstract, htmlAttributes: new { @class = "form-control" })
        @Html.ValidationMessageFor(x => x.Abstract, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @if (Model.Action == "Edit" && !string.IsNullOrEmpty(Model.FileName))
        {
            @Html.LabelFor(x => Model.FileName, htmlAttributes: new { @class = "control-label" })
            @Html.TextBoxFor(m => m.FileName, new { @class = "form-control", type = "text", @readonly = "true" })
        }
        @Html.LabelFor(x => Model.File, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(m => m.File, new { type = "file" })
        @Html.ValidationMessageFor(x => x.File, "", new { @class = "text-danger" })
    </div>

    <div class="text-danger">
        @ViewBag.ErrorMessage
    </div>

    <button type="submit" class="btn btn-success">Submit</button>
}

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
}